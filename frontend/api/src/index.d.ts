// Code generated by protobuf.js in compile-protos.sh. DO NOT EDIT.

import * as $protobuf from "protobufjs";
/** Namespace saiprakash_v. */
export namespace saiprakash_v {

    /** Namespace echo. */
    namespace echo {

        /** Namespace v1. */
        namespace v1 {

            /** Represents an EchoAPI */
            class EchoAPI extends $protobuf.rpc.Service {

                /**
                 * Constructs a new EchoAPI service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls SayHello.
                 * @param request SayHelloRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and SayHelloResponse
                 */
                public sayHello(request: saiprakash_v.echo.v1.ISayHelloRequest, callback: saiprakash_v.echo.v1.EchoAPI.SayHelloCallback): void;

                /**
                 * Calls SayHello.
                 * @param request SayHelloRequest message or plain object
                 * @returns Promise
                 */
                public sayHello(request: saiprakash_v.echo.v1.ISayHelloRequest): Promise<saiprakash_v.echo.v1.SayHelloResponse>;
            }

            namespace EchoAPI {

                /**
                 * Callback as used by {@link saiprakash_v.echo.v1.EchoAPI#sayHello}.
                 * @param error Error, if any
                 * @param [response] SayHelloResponse
                 */
                type SayHelloCallback = (error: (Error|null), response?: saiprakash_v.echo.v1.SayHelloResponse) => void;
            }

            /** Properties of a SayHelloRequest. */
            interface ISayHelloRequest {

                /** SayHelloRequest name */
                name?: (string|null);
            }

            /** Represents a SayHelloRequest. */
            class SayHelloRequest implements ISayHelloRequest {

                /**
                 * Constructs a new SayHelloRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: saiprakash_v.echo.v1.ISayHelloRequest);

                /** SayHelloRequest name. */
                public name: string;

                /**
                 * Verifies a SayHelloRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SayHelloRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SayHelloRequest
                 */
                public static fromObject(object: { [k: string]: any }): saiprakash_v.echo.v1.SayHelloRequest;

                /**
                 * Creates a plain object from a SayHelloRequest message. Also converts values to other types if specified.
                 * @param message SayHelloRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: saiprakash_v.echo.v1.SayHelloRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SayHelloRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SayHelloResponse. */
            interface ISayHelloResponse {

                /** SayHelloResponse message */
                message?: (string|null);
            }

            /** Represents a SayHelloResponse. */
            class SayHelloResponse implements ISayHelloResponse {

                /**
                 * Constructs a new SayHelloResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: saiprakash_v.echo.v1.ISayHelloResponse);

                /** SayHelloResponse message. */
                public message: string;

                /**
                 * Verifies a SayHelloResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SayHelloResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SayHelloResponse
                 */
                public static fromObject(object: { [k: string]: any }): saiprakash_v.echo.v1.SayHelloResponse;

                /**
                 * Creates a plain object from a SayHelloResponse message. Also converts values to other types if specified.
                 * @param message SayHelloResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: saiprakash_v.echo.v1.SayHelloResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SayHelloResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}

/** Namespace validate. */
export namespace validate {

    /** Properties of a FieldRules. */
    interface IFieldRules {

        /** FieldRules message */
        message?: (validate.IMessageRules|null);

        /** FieldRules float */
        float?: (validate.IFloatRules|null);

        /** FieldRules double */
        double?: (validate.IDoubleRules|null);

        /** FieldRules int32 */
        int32?: (validate.IInt32Rules|null);

        /** FieldRules int64 */
        int64?: (validate.IInt64Rules|null);

        /** FieldRules uint32 */
        uint32?: (validate.IUInt32Rules|null);

        /** FieldRules uint64 */
        uint64?: (validate.IUInt64Rules|null);

        /** FieldRules sint32 */
        sint32?: (validate.ISInt32Rules|null);

        /** FieldRules sint64 */
        sint64?: (validate.ISInt64Rules|null);

        /** FieldRules fixed32 */
        fixed32?: (validate.IFixed32Rules|null);

        /** FieldRules fixed64 */
        fixed64?: (validate.IFixed64Rules|null);

        /** FieldRules sfixed32 */
        sfixed32?: (validate.ISFixed32Rules|null);

        /** FieldRules sfixed64 */
        sfixed64?: (validate.ISFixed64Rules|null);

        /** FieldRules bool */
        bool?: (validate.IBoolRules|null);

        /** FieldRules string */
        string?: (validate.IStringRules|null);

        /** FieldRules bytes */
        bytes?: (validate.IBytesRules|null);

        /** FieldRules enum */
        "enum"?: (validate.IEnumRules|null);

        /** FieldRules repeated */
        repeated?: (validate.IRepeatedRules|null);

        /** FieldRules map */
        map?: (validate.IMapRules|null);

        /** FieldRules any */
        any?: (validate.IAnyRules|null);

        /** FieldRules duration */
        duration?: (validate.IDurationRules|null);

        /** FieldRules timestamp */
        timestamp?: (validate.ITimestampRules|null);
    }

    /** Represents a FieldRules. */
    class FieldRules implements IFieldRules {

        /**
         * Constructs a new FieldRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IFieldRules);

        /** FieldRules message. */
        public message?: (validate.IMessageRules|null);

        /** FieldRules float. */
        public float?: (validate.IFloatRules|null);

        /** FieldRules double. */
        public double?: (validate.IDoubleRules|null);

        /** FieldRules int32. */
        public int32?: (validate.IInt32Rules|null);

        /** FieldRules int64. */
        public int64?: (validate.IInt64Rules|null);

        /** FieldRules uint32. */
        public uint32?: (validate.IUInt32Rules|null);

        /** FieldRules uint64. */
        public uint64?: (validate.IUInt64Rules|null);

        /** FieldRules sint32. */
        public sint32?: (validate.ISInt32Rules|null);

        /** FieldRules sint64. */
        public sint64?: (validate.ISInt64Rules|null);

        /** FieldRules fixed32. */
        public fixed32?: (validate.IFixed32Rules|null);

        /** FieldRules fixed64. */
        public fixed64?: (validate.IFixed64Rules|null);

        /** FieldRules sfixed32. */
        public sfixed32?: (validate.ISFixed32Rules|null);

        /** FieldRules sfixed64. */
        public sfixed64?: (validate.ISFixed64Rules|null);

        /** FieldRules bool. */
        public bool?: (validate.IBoolRules|null);

        /** FieldRules string. */
        public string?: (validate.IStringRules|null);

        /** FieldRules bytes. */
        public bytes?: (validate.IBytesRules|null);

        /** FieldRules enum. */
        public enum?: (validate.IEnumRules|null);

        /** FieldRules repeated. */
        public repeated?: (validate.IRepeatedRules|null);

        /** FieldRules map. */
        public map?: (validate.IMapRules|null);

        /** FieldRules any. */
        public any?: (validate.IAnyRules|null);

        /** FieldRules duration. */
        public duration?: (validate.IDurationRules|null);

        /** FieldRules timestamp. */
        public timestamp?: (validate.ITimestampRules|null);

        /** FieldRules type. */
        public type?: ("float"|"double"|"int32"|"int64"|"uint32"|"uint64"|"sint32"|"sint64"|"fixed32"|"fixed64"|"sfixed32"|"sfixed64"|"bool"|"string"|"bytes"|"enum"|"repeated"|"map"|"any"|"duration"|"timestamp");

        /**
         * Verifies a FieldRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FieldRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FieldRules
         */
        public static fromObject(object: { [k: string]: any }): validate.FieldRules;

        /**
         * Creates a plain object from a FieldRules message. Also converts values to other types if specified.
         * @param message FieldRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.FieldRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FieldRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FloatRules. */
    interface IFloatRules {

        /** FloatRules const */
        "const"?: (number|null);

        /** FloatRules lt */
        lt?: (number|null);

        /** FloatRules lte */
        lte?: (number|null);

        /** FloatRules gt */
        gt?: (number|null);

        /** FloatRules gte */
        gte?: (number|null);

        /** FloatRules in */
        "in"?: (number[]|null);

        /** FloatRules notIn */
        notIn?: (number[]|null);

        /** FloatRules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a FloatRules. */
    class FloatRules implements IFloatRules {

        /**
         * Constructs a new FloatRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IFloatRules);

        /** FloatRules const. */
        public const: number;

        /** FloatRules lt. */
        public lt: number;

        /** FloatRules lte. */
        public lte: number;

        /** FloatRules gt. */
        public gt: number;

        /** FloatRules gte. */
        public gte: number;

        /** FloatRules in. */
        public in: number[];

        /** FloatRules notIn. */
        public notIn: number[];

        /** FloatRules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a FloatRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FloatRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FloatRules
         */
        public static fromObject(object: { [k: string]: any }): validate.FloatRules;

        /**
         * Creates a plain object from a FloatRules message. Also converts values to other types if specified.
         * @param message FloatRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.FloatRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FloatRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DoubleRules. */
    interface IDoubleRules {

        /** DoubleRules const */
        "const"?: (number|null);

        /** DoubleRules lt */
        lt?: (number|null);

        /** DoubleRules lte */
        lte?: (number|null);

        /** DoubleRules gt */
        gt?: (number|null);

        /** DoubleRules gte */
        gte?: (number|null);

        /** DoubleRules in */
        "in"?: (number[]|null);

        /** DoubleRules notIn */
        notIn?: (number[]|null);

        /** DoubleRules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a DoubleRules. */
    class DoubleRules implements IDoubleRules {

        /**
         * Constructs a new DoubleRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IDoubleRules);

        /** DoubleRules const. */
        public const: number;

        /** DoubleRules lt. */
        public lt: number;

        /** DoubleRules lte. */
        public lte: number;

        /** DoubleRules gt. */
        public gt: number;

        /** DoubleRules gte. */
        public gte: number;

        /** DoubleRules in. */
        public in: number[];

        /** DoubleRules notIn. */
        public notIn: number[];

        /** DoubleRules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a DoubleRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DoubleRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DoubleRules
         */
        public static fromObject(object: { [k: string]: any }): validate.DoubleRules;

        /**
         * Creates a plain object from a DoubleRules message. Also converts values to other types if specified.
         * @param message DoubleRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.DoubleRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DoubleRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Int32Rules. */
    interface IInt32Rules {

        /** Int32Rules const */
        "const"?: (number|null);

        /** Int32Rules lt */
        lt?: (number|null);

        /** Int32Rules lte */
        lte?: (number|null);

        /** Int32Rules gt */
        gt?: (number|null);

        /** Int32Rules gte */
        gte?: (number|null);

        /** Int32Rules in */
        "in"?: (number[]|null);

        /** Int32Rules notIn */
        notIn?: (number[]|null);

        /** Int32Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents an Int32Rules. */
    class Int32Rules implements IInt32Rules {

        /**
         * Constructs a new Int32Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IInt32Rules);

        /** Int32Rules const. */
        public const: number;

        /** Int32Rules lt. */
        public lt: number;

        /** Int32Rules lte. */
        public lte: number;

        /** Int32Rules gt. */
        public gt: number;

        /** Int32Rules gte. */
        public gte: number;

        /** Int32Rules in. */
        public in: number[];

        /** Int32Rules notIn. */
        public notIn: number[];

        /** Int32Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies an Int32Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Int32Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Int32Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.Int32Rules;

        /**
         * Creates a plain object from an Int32Rules message. Also converts values to other types if specified.
         * @param message Int32Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.Int32Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Int32Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Int64Rules. */
    interface IInt64Rules {

        /** Int64Rules const */
        "const"?: (number|Long|null);

        /** Int64Rules lt */
        lt?: (number|Long|null);

        /** Int64Rules lte */
        lte?: (number|Long|null);

        /** Int64Rules gt */
        gt?: (number|Long|null);

        /** Int64Rules gte */
        gte?: (number|Long|null);

        /** Int64Rules in */
        "in"?: ((number|Long)[]|null);

        /** Int64Rules notIn */
        notIn?: ((number|Long)[]|null);

        /** Int64Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents an Int64Rules. */
    class Int64Rules implements IInt64Rules {

        /**
         * Constructs a new Int64Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IInt64Rules);

        /** Int64Rules const. */
        public const: (number|Long);

        /** Int64Rules lt. */
        public lt: (number|Long);

        /** Int64Rules lte. */
        public lte: (number|Long);

        /** Int64Rules gt. */
        public gt: (number|Long);

        /** Int64Rules gte. */
        public gte: (number|Long);

        /** Int64Rules in. */
        public in: (number|Long)[];

        /** Int64Rules notIn. */
        public notIn: (number|Long)[];

        /** Int64Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies an Int64Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Int64Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Int64Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.Int64Rules;

        /**
         * Creates a plain object from an Int64Rules message. Also converts values to other types if specified.
         * @param message Int64Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.Int64Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Int64Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UInt32Rules. */
    interface IUInt32Rules {

        /** UInt32Rules const */
        "const"?: (number|null);

        /** UInt32Rules lt */
        lt?: (number|null);

        /** UInt32Rules lte */
        lte?: (number|null);

        /** UInt32Rules gt */
        gt?: (number|null);

        /** UInt32Rules gte */
        gte?: (number|null);

        /** UInt32Rules in */
        "in"?: (number[]|null);

        /** UInt32Rules notIn */
        notIn?: (number[]|null);

        /** UInt32Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a UInt32Rules. */
    class UInt32Rules implements IUInt32Rules {

        /**
         * Constructs a new UInt32Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IUInt32Rules);

        /** UInt32Rules const. */
        public const: number;

        /** UInt32Rules lt. */
        public lt: number;

        /** UInt32Rules lte. */
        public lte: number;

        /** UInt32Rules gt. */
        public gt: number;

        /** UInt32Rules gte. */
        public gte: number;

        /** UInt32Rules in. */
        public in: number[];

        /** UInt32Rules notIn. */
        public notIn: number[];

        /** UInt32Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a UInt32Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UInt32Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UInt32Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.UInt32Rules;

        /**
         * Creates a plain object from a UInt32Rules message. Also converts values to other types if specified.
         * @param message UInt32Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.UInt32Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UInt32Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UInt64Rules. */
    interface IUInt64Rules {

        /** UInt64Rules const */
        "const"?: (number|Long|null);

        /** UInt64Rules lt */
        lt?: (number|Long|null);

        /** UInt64Rules lte */
        lte?: (number|Long|null);

        /** UInt64Rules gt */
        gt?: (number|Long|null);

        /** UInt64Rules gte */
        gte?: (number|Long|null);

        /** UInt64Rules in */
        "in"?: ((number|Long)[]|null);

        /** UInt64Rules notIn */
        notIn?: ((number|Long)[]|null);

        /** UInt64Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a UInt64Rules. */
    class UInt64Rules implements IUInt64Rules {

        /**
         * Constructs a new UInt64Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IUInt64Rules);

        /** UInt64Rules const. */
        public const: (number|Long);

        /** UInt64Rules lt. */
        public lt: (number|Long);

        /** UInt64Rules lte. */
        public lte: (number|Long);

        /** UInt64Rules gt. */
        public gt: (number|Long);

        /** UInt64Rules gte. */
        public gte: (number|Long);

        /** UInt64Rules in. */
        public in: (number|Long)[];

        /** UInt64Rules notIn. */
        public notIn: (number|Long)[];

        /** UInt64Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a UInt64Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UInt64Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UInt64Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.UInt64Rules;

        /**
         * Creates a plain object from a UInt64Rules message. Also converts values to other types if specified.
         * @param message UInt64Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.UInt64Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UInt64Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SInt32Rules. */
    interface ISInt32Rules {

        /** SInt32Rules const */
        "const"?: (number|null);

        /** SInt32Rules lt */
        lt?: (number|null);

        /** SInt32Rules lte */
        lte?: (number|null);

        /** SInt32Rules gt */
        gt?: (number|null);

        /** SInt32Rules gte */
        gte?: (number|null);

        /** SInt32Rules in */
        "in"?: (number[]|null);

        /** SInt32Rules notIn */
        notIn?: (number[]|null);

        /** SInt32Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a SInt32Rules. */
    class SInt32Rules implements ISInt32Rules {

        /**
         * Constructs a new SInt32Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.ISInt32Rules);

        /** SInt32Rules const. */
        public const: number;

        /** SInt32Rules lt. */
        public lt: number;

        /** SInt32Rules lte. */
        public lte: number;

        /** SInt32Rules gt. */
        public gt: number;

        /** SInt32Rules gte. */
        public gte: number;

        /** SInt32Rules in. */
        public in: number[];

        /** SInt32Rules notIn. */
        public notIn: number[];

        /** SInt32Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a SInt32Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SInt32Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SInt32Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.SInt32Rules;

        /**
         * Creates a plain object from a SInt32Rules message. Also converts values to other types if specified.
         * @param message SInt32Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.SInt32Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SInt32Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SInt64Rules. */
    interface ISInt64Rules {

        /** SInt64Rules const */
        "const"?: (number|Long|null);

        /** SInt64Rules lt */
        lt?: (number|Long|null);

        /** SInt64Rules lte */
        lte?: (number|Long|null);

        /** SInt64Rules gt */
        gt?: (number|Long|null);

        /** SInt64Rules gte */
        gte?: (number|Long|null);

        /** SInt64Rules in */
        "in"?: ((number|Long)[]|null);

        /** SInt64Rules notIn */
        notIn?: ((number|Long)[]|null);

        /** SInt64Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a SInt64Rules. */
    class SInt64Rules implements ISInt64Rules {

        /**
         * Constructs a new SInt64Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.ISInt64Rules);

        /** SInt64Rules const. */
        public const: (number|Long);

        /** SInt64Rules lt. */
        public lt: (number|Long);

        /** SInt64Rules lte. */
        public lte: (number|Long);

        /** SInt64Rules gt. */
        public gt: (number|Long);

        /** SInt64Rules gte. */
        public gte: (number|Long);

        /** SInt64Rules in. */
        public in: (number|Long)[];

        /** SInt64Rules notIn. */
        public notIn: (number|Long)[];

        /** SInt64Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a SInt64Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SInt64Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SInt64Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.SInt64Rules;

        /**
         * Creates a plain object from a SInt64Rules message. Also converts values to other types if specified.
         * @param message SInt64Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.SInt64Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SInt64Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Fixed32Rules. */
    interface IFixed32Rules {

        /** Fixed32Rules const */
        "const"?: (number|null);

        /** Fixed32Rules lt */
        lt?: (number|null);

        /** Fixed32Rules lte */
        lte?: (number|null);

        /** Fixed32Rules gt */
        gt?: (number|null);

        /** Fixed32Rules gte */
        gte?: (number|null);

        /** Fixed32Rules in */
        "in"?: (number[]|null);

        /** Fixed32Rules notIn */
        notIn?: (number[]|null);

        /** Fixed32Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a Fixed32Rules. */
    class Fixed32Rules implements IFixed32Rules {

        /**
         * Constructs a new Fixed32Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IFixed32Rules);

        /** Fixed32Rules const. */
        public const: number;

        /** Fixed32Rules lt. */
        public lt: number;

        /** Fixed32Rules lte. */
        public lte: number;

        /** Fixed32Rules gt. */
        public gt: number;

        /** Fixed32Rules gte. */
        public gte: number;

        /** Fixed32Rules in. */
        public in: number[];

        /** Fixed32Rules notIn. */
        public notIn: number[];

        /** Fixed32Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a Fixed32Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Fixed32Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Fixed32Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.Fixed32Rules;

        /**
         * Creates a plain object from a Fixed32Rules message. Also converts values to other types if specified.
         * @param message Fixed32Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.Fixed32Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Fixed32Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Fixed64Rules. */
    interface IFixed64Rules {

        /** Fixed64Rules const */
        "const"?: (number|Long|null);

        /** Fixed64Rules lt */
        lt?: (number|Long|null);

        /** Fixed64Rules lte */
        lte?: (number|Long|null);

        /** Fixed64Rules gt */
        gt?: (number|Long|null);

        /** Fixed64Rules gte */
        gte?: (number|Long|null);

        /** Fixed64Rules in */
        "in"?: ((number|Long)[]|null);

        /** Fixed64Rules notIn */
        notIn?: ((number|Long)[]|null);

        /** Fixed64Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a Fixed64Rules. */
    class Fixed64Rules implements IFixed64Rules {

        /**
         * Constructs a new Fixed64Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IFixed64Rules);

        /** Fixed64Rules const. */
        public const: (number|Long);

        /** Fixed64Rules lt. */
        public lt: (number|Long);

        /** Fixed64Rules lte. */
        public lte: (number|Long);

        /** Fixed64Rules gt. */
        public gt: (number|Long);

        /** Fixed64Rules gte. */
        public gte: (number|Long);

        /** Fixed64Rules in. */
        public in: (number|Long)[];

        /** Fixed64Rules notIn. */
        public notIn: (number|Long)[];

        /** Fixed64Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a Fixed64Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Fixed64Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Fixed64Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.Fixed64Rules;

        /**
         * Creates a plain object from a Fixed64Rules message. Also converts values to other types if specified.
         * @param message Fixed64Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.Fixed64Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Fixed64Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SFixed32Rules. */
    interface ISFixed32Rules {

        /** SFixed32Rules const */
        "const"?: (number|null);

        /** SFixed32Rules lt */
        lt?: (number|null);

        /** SFixed32Rules lte */
        lte?: (number|null);

        /** SFixed32Rules gt */
        gt?: (number|null);

        /** SFixed32Rules gte */
        gte?: (number|null);

        /** SFixed32Rules in */
        "in"?: (number[]|null);

        /** SFixed32Rules notIn */
        notIn?: (number[]|null);

        /** SFixed32Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a SFixed32Rules. */
    class SFixed32Rules implements ISFixed32Rules {

        /**
         * Constructs a new SFixed32Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.ISFixed32Rules);

        /** SFixed32Rules const. */
        public const: number;

        /** SFixed32Rules lt. */
        public lt: number;

        /** SFixed32Rules lte. */
        public lte: number;

        /** SFixed32Rules gt. */
        public gt: number;

        /** SFixed32Rules gte. */
        public gte: number;

        /** SFixed32Rules in. */
        public in: number[];

        /** SFixed32Rules notIn. */
        public notIn: number[];

        /** SFixed32Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a SFixed32Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SFixed32Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SFixed32Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.SFixed32Rules;

        /**
         * Creates a plain object from a SFixed32Rules message. Also converts values to other types if specified.
         * @param message SFixed32Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.SFixed32Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SFixed32Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SFixed64Rules. */
    interface ISFixed64Rules {

        /** SFixed64Rules const */
        "const"?: (number|Long|null);

        /** SFixed64Rules lt */
        lt?: (number|Long|null);

        /** SFixed64Rules lte */
        lte?: (number|Long|null);

        /** SFixed64Rules gt */
        gt?: (number|Long|null);

        /** SFixed64Rules gte */
        gte?: (number|Long|null);

        /** SFixed64Rules in */
        "in"?: ((number|Long)[]|null);

        /** SFixed64Rules notIn */
        notIn?: ((number|Long)[]|null);

        /** SFixed64Rules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a SFixed64Rules. */
    class SFixed64Rules implements ISFixed64Rules {

        /**
         * Constructs a new SFixed64Rules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.ISFixed64Rules);

        /** SFixed64Rules const. */
        public const: (number|Long);

        /** SFixed64Rules lt. */
        public lt: (number|Long);

        /** SFixed64Rules lte. */
        public lte: (number|Long);

        /** SFixed64Rules gt. */
        public gt: (number|Long);

        /** SFixed64Rules gte. */
        public gte: (number|Long);

        /** SFixed64Rules in. */
        public in: (number|Long)[];

        /** SFixed64Rules notIn. */
        public notIn: (number|Long)[];

        /** SFixed64Rules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a SFixed64Rules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SFixed64Rules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SFixed64Rules
         */
        public static fromObject(object: { [k: string]: any }): validate.SFixed64Rules;

        /**
         * Creates a plain object from a SFixed64Rules message. Also converts values to other types if specified.
         * @param message SFixed64Rules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.SFixed64Rules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SFixed64Rules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BoolRules. */
    interface IBoolRules {

        /** BoolRules const */
        "const"?: (boolean|null);
    }

    /** Represents a BoolRules. */
    class BoolRules implements IBoolRules {

        /**
         * Constructs a new BoolRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IBoolRules);

        /** BoolRules const. */
        public const: boolean;

        /**
         * Verifies a BoolRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BoolRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BoolRules
         */
        public static fromObject(object: { [k: string]: any }): validate.BoolRules;

        /**
         * Creates a plain object from a BoolRules message. Also converts values to other types if specified.
         * @param message BoolRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.BoolRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BoolRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StringRules. */
    interface IStringRules {

        /** StringRules const */
        "const"?: (string|null);

        /** StringRules len */
        len?: (number|Long|null);

        /** StringRules minLen */
        minLen?: (number|Long|null);

        /** StringRules maxLen */
        maxLen?: (number|Long|null);

        /** StringRules lenBytes */
        lenBytes?: (number|Long|null);

        /** StringRules minBytes */
        minBytes?: (number|Long|null);

        /** StringRules maxBytes */
        maxBytes?: (number|Long|null);

        /** StringRules pattern */
        pattern?: (string|null);

        /** StringRules prefix */
        prefix?: (string|null);

        /** StringRules suffix */
        suffix?: (string|null);

        /** StringRules contains */
        contains?: (string|null);

        /** StringRules notContains */
        notContains?: (string|null);

        /** StringRules in */
        "in"?: (string[]|null);

        /** StringRules notIn */
        notIn?: (string[]|null);

        /** StringRules email */
        email?: (boolean|null);

        /** StringRules hostname */
        hostname?: (boolean|null);

        /** StringRules ip */
        ip?: (boolean|null);

        /** StringRules ipv4 */
        ipv4?: (boolean|null);

        /** StringRules ipv6 */
        ipv6?: (boolean|null);

        /** StringRules uri */
        uri?: (boolean|null);

        /** StringRules uriRef */
        uriRef?: (boolean|null);

        /** StringRules address */
        address?: (boolean|null);

        /** StringRules uuid */
        uuid?: (boolean|null);

        /** StringRules wellKnownRegex */
        wellKnownRegex?: (validate.KnownRegex|null);

        /** StringRules strict */
        strict?: (boolean|null);

        /** StringRules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a StringRules. */
    class StringRules implements IStringRules {

        /**
         * Constructs a new StringRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IStringRules);

        /** StringRules const. */
        public const: string;

        /** StringRules len. */
        public len: (number|Long);

        /** StringRules minLen. */
        public minLen: (number|Long);

        /** StringRules maxLen. */
        public maxLen: (number|Long);

        /** StringRules lenBytes. */
        public lenBytes: (number|Long);

        /** StringRules minBytes. */
        public minBytes: (number|Long);

        /** StringRules maxBytes. */
        public maxBytes: (number|Long);

        /** StringRules pattern. */
        public pattern: string;

        /** StringRules prefix. */
        public prefix: string;

        /** StringRules suffix. */
        public suffix: string;

        /** StringRules contains. */
        public contains: string;

        /** StringRules notContains. */
        public notContains: string;

        /** StringRules in. */
        public in: string[];

        /** StringRules notIn. */
        public notIn: string[];

        /** StringRules email. */
        public email?: (boolean|null);

        /** StringRules hostname. */
        public hostname?: (boolean|null);

        /** StringRules ip. */
        public ip?: (boolean|null);

        /** StringRules ipv4. */
        public ipv4?: (boolean|null);

        /** StringRules ipv6. */
        public ipv6?: (boolean|null);

        /** StringRules uri. */
        public uri?: (boolean|null);

        /** StringRules uriRef. */
        public uriRef?: (boolean|null);

        /** StringRules address. */
        public address?: (boolean|null);

        /** StringRules uuid. */
        public uuid?: (boolean|null);

        /** StringRules wellKnownRegex. */
        public wellKnownRegex?: (validate.KnownRegex|null);

        /** StringRules strict. */
        public strict: boolean;

        /** StringRules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /** StringRules wellKnown. */
        public wellKnown?: ("email"|"hostname"|"ip"|"ipv4"|"ipv6"|"uri"|"uriRef"|"address"|"uuid"|"wellKnownRegex");

        /**
         * Verifies a StringRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StringRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StringRules
         */
        public static fromObject(object: { [k: string]: any }): validate.StringRules;

        /**
         * Creates a plain object from a StringRules message. Also converts values to other types if specified.
         * @param message StringRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.StringRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StringRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** KnownRegex enum. */
    enum KnownRegex {
        UNKNOWN = 0,
        HTTP_HEADER_NAME = 1,
        HTTP_HEADER_VALUE = 2
    }

    /** Properties of a BytesRules. */
    interface IBytesRules {

        /** BytesRules const */
        "const"?: (Uint8Array|null);

        /** BytesRules len */
        len?: (number|Long|null);

        /** BytesRules minLen */
        minLen?: (number|Long|null);

        /** BytesRules maxLen */
        maxLen?: (number|Long|null);

        /** BytesRules pattern */
        pattern?: (string|null);

        /** BytesRules prefix */
        prefix?: (Uint8Array|null);

        /** BytesRules suffix */
        suffix?: (Uint8Array|null);

        /** BytesRules contains */
        contains?: (Uint8Array|null);

        /** BytesRules in */
        "in"?: (Uint8Array[]|null);

        /** BytesRules notIn */
        notIn?: (Uint8Array[]|null);

        /** BytesRules ip */
        ip?: (boolean|null);

        /** BytesRules ipv4 */
        ipv4?: (boolean|null);

        /** BytesRules ipv6 */
        ipv6?: (boolean|null);

        /** BytesRules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a BytesRules. */
    class BytesRules implements IBytesRules {

        /**
         * Constructs a new BytesRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IBytesRules);

        /** BytesRules const. */
        public const: Uint8Array;

        /** BytesRules len. */
        public len: (number|Long);

        /** BytesRules minLen. */
        public minLen: (number|Long);

        /** BytesRules maxLen. */
        public maxLen: (number|Long);

        /** BytesRules pattern. */
        public pattern: string;

        /** BytesRules prefix. */
        public prefix: Uint8Array;

        /** BytesRules suffix. */
        public suffix: Uint8Array;

        /** BytesRules contains. */
        public contains: Uint8Array;

        /** BytesRules in. */
        public in: Uint8Array[];

        /** BytesRules notIn. */
        public notIn: Uint8Array[];

        /** BytesRules ip. */
        public ip?: (boolean|null);

        /** BytesRules ipv4. */
        public ipv4?: (boolean|null);

        /** BytesRules ipv6. */
        public ipv6?: (boolean|null);

        /** BytesRules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /** BytesRules wellKnown. */
        public wellKnown?: ("ip"|"ipv4"|"ipv6");

        /**
         * Verifies a BytesRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BytesRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BytesRules
         */
        public static fromObject(object: { [k: string]: any }): validate.BytesRules;

        /**
         * Creates a plain object from a BytesRules message. Also converts values to other types if specified.
         * @param message BytesRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.BytesRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BytesRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnumRules. */
    interface IEnumRules {

        /** EnumRules const */
        "const"?: (number|null);

        /** EnumRules definedOnly */
        definedOnly?: (boolean|null);

        /** EnumRules in */
        "in"?: (number[]|null);

        /** EnumRules notIn */
        notIn?: (number[]|null);
    }

    /** Represents an EnumRules. */
    class EnumRules implements IEnumRules {

        /**
         * Constructs a new EnumRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IEnumRules);

        /** EnumRules const. */
        public const: number;

        /** EnumRules definedOnly. */
        public definedOnly: boolean;

        /** EnumRules in. */
        public in: number[];

        /** EnumRules notIn. */
        public notIn: number[];

        /**
         * Verifies an EnumRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnumRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnumRules
         */
        public static fromObject(object: { [k: string]: any }): validate.EnumRules;

        /**
         * Creates a plain object from an EnumRules message. Also converts values to other types if specified.
         * @param message EnumRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.EnumRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnumRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MessageRules. */
    interface IMessageRules {

        /** MessageRules skip */
        skip?: (boolean|null);

        /** MessageRules required */
        required?: (boolean|null);
    }

    /** Represents a MessageRules. */
    class MessageRules implements IMessageRules {

        /**
         * Constructs a new MessageRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IMessageRules);

        /** MessageRules skip. */
        public skip: boolean;

        /** MessageRules required. */
        public required: boolean;

        /**
         * Verifies a MessageRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MessageRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MessageRules
         */
        public static fromObject(object: { [k: string]: any }): validate.MessageRules;

        /**
         * Creates a plain object from a MessageRules message. Also converts values to other types if specified.
         * @param message MessageRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.MessageRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MessageRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RepeatedRules. */
    interface IRepeatedRules {

        /** RepeatedRules minItems */
        minItems?: (number|Long|null);

        /** RepeatedRules maxItems */
        maxItems?: (number|Long|null);

        /** RepeatedRules unique */
        unique?: (boolean|null);

        /** RepeatedRules items */
        items?: (validate.IFieldRules|null);

        /** RepeatedRules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a RepeatedRules. */
    class RepeatedRules implements IRepeatedRules {

        /**
         * Constructs a new RepeatedRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IRepeatedRules);

        /** RepeatedRules minItems. */
        public minItems: (number|Long);

        /** RepeatedRules maxItems. */
        public maxItems: (number|Long);

        /** RepeatedRules unique. */
        public unique: boolean;

        /** RepeatedRules items. */
        public items?: (validate.IFieldRules|null);

        /** RepeatedRules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a RepeatedRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RepeatedRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RepeatedRules
         */
        public static fromObject(object: { [k: string]: any }): validate.RepeatedRules;

        /**
         * Creates a plain object from a RepeatedRules message. Also converts values to other types if specified.
         * @param message RepeatedRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.RepeatedRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RepeatedRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapRules. */
    interface IMapRules {

        /** MapRules minPairs */
        minPairs?: (number|Long|null);

        /** MapRules maxPairs */
        maxPairs?: (number|Long|null);

        /** MapRules noSparse */
        noSparse?: (boolean|null);

        /** MapRules keys */
        keys?: (validate.IFieldRules|null);

        /** MapRules values */
        values?: (validate.IFieldRules|null);

        /** MapRules ignoreEmpty */
        ignoreEmpty?: (boolean|null);
    }

    /** Represents a MapRules. */
    class MapRules implements IMapRules {

        /**
         * Constructs a new MapRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IMapRules);

        /** MapRules minPairs. */
        public minPairs: (number|Long);

        /** MapRules maxPairs. */
        public maxPairs: (number|Long);

        /** MapRules noSparse. */
        public noSparse: boolean;

        /** MapRules keys. */
        public keys?: (validate.IFieldRules|null);

        /** MapRules values. */
        public values?: (validate.IFieldRules|null);

        /** MapRules ignoreEmpty. */
        public ignoreEmpty: boolean;

        /**
         * Verifies a MapRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapRules
         */
        public static fromObject(object: { [k: string]: any }): validate.MapRules;

        /**
         * Creates a plain object from a MapRules message. Also converts values to other types if specified.
         * @param message MapRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.MapRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AnyRules. */
    interface IAnyRules {

        /** AnyRules required */
        required?: (boolean|null);

        /** AnyRules in */
        "in"?: (string[]|null);

        /** AnyRules notIn */
        notIn?: (string[]|null);
    }

    /** Represents an AnyRules. */
    class AnyRules implements IAnyRules {

        /**
         * Constructs a new AnyRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IAnyRules);

        /** AnyRules required. */
        public required: boolean;

        /** AnyRules in. */
        public in: string[];

        /** AnyRules notIn. */
        public notIn: string[];

        /**
         * Verifies an AnyRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AnyRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AnyRules
         */
        public static fromObject(object: { [k: string]: any }): validate.AnyRules;

        /**
         * Creates a plain object from an AnyRules message. Also converts values to other types if specified.
         * @param message AnyRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.AnyRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AnyRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DurationRules. */
    interface IDurationRules {

        /** DurationRules required */
        required?: (boolean|null);

        /** DurationRules const */
        "const"?: (google.protobuf.IDuration|null);

        /** DurationRules lt */
        lt?: (google.protobuf.IDuration|null);

        /** DurationRules lte */
        lte?: (google.protobuf.IDuration|null);

        /** DurationRules gt */
        gt?: (google.protobuf.IDuration|null);

        /** DurationRules gte */
        gte?: (google.protobuf.IDuration|null);

        /** DurationRules in */
        "in"?: (google.protobuf.IDuration[]|null);

        /** DurationRules notIn */
        notIn?: (google.protobuf.IDuration[]|null);
    }

    /** Represents a DurationRules. */
    class DurationRules implements IDurationRules {

        /**
         * Constructs a new DurationRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.IDurationRules);

        /** DurationRules required. */
        public required: boolean;

        /** DurationRules const. */
        public const?: (google.protobuf.IDuration|null);

        /** DurationRules lt. */
        public lt?: (google.protobuf.IDuration|null);

        /** DurationRules lte. */
        public lte?: (google.protobuf.IDuration|null);

        /** DurationRules gt. */
        public gt?: (google.protobuf.IDuration|null);

        /** DurationRules gte. */
        public gte?: (google.protobuf.IDuration|null);

        /** DurationRules in. */
        public in: google.protobuf.IDuration[];

        /** DurationRules notIn. */
        public notIn: google.protobuf.IDuration[];

        /**
         * Verifies a DurationRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DurationRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DurationRules
         */
        public static fromObject(object: { [k: string]: any }): validate.DurationRules;

        /**
         * Creates a plain object from a DurationRules message. Also converts values to other types if specified.
         * @param message DurationRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.DurationRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DurationRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimestampRules. */
    interface ITimestampRules {

        /** TimestampRules required */
        required?: (boolean|null);

        /** TimestampRules const */
        "const"?: (google.protobuf.ITimestamp|null);

        /** TimestampRules lt */
        lt?: (google.protobuf.ITimestamp|null);

        /** TimestampRules lte */
        lte?: (google.protobuf.ITimestamp|null);

        /** TimestampRules gt */
        gt?: (google.protobuf.ITimestamp|null);

        /** TimestampRules gte */
        gte?: (google.protobuf.ITimestamp|null);

        /** TimestampRules ltNow */
        ltNow?: (boolean|null);

        /** TimestampRules gtNow */
        gtNow?: (boolean|null);

        /** TimestampRules within */
        within?: (google.protobuf.IDuration|null);
    }

    /** Represents a TimestampRules. */
    class TimestampRules implements ITimestampRules {

        /**
         * Constructs a new TimestampRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: validate.ITimestampRules);

        /** TimestampRules required. */
        public required: boolean;

        /** TimestampRules const. */
        public const?: (google.protobuf.ITimestamp|null);

        /** TimestampRules lt. */
        public lt?: (google.protobuf.ITimestamp|null);

        /** TimestampRules lte. */
        public lte?: (google.protobuf.ITimestamp|null);

        /** TimestampRules gt. */
        public gt?: (google.protobuf.ITimestamp|null);

        /** TimestampRules gte. */
        public gte?: (google.protobuf.ITimestamp|null);

        /** TimestampRules ltNow. */
        public ltNow: boolean;

        /** TimestampRules gtNow. */
        public gtNow: boolean;

        /** TimestampRules within. */
        public within?: (google.protobuf.IDuration|null);

        /**
         * Verifies a TimestampRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimestampRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimestampRules
         */
        public static fromObject(object: { [k: string]: any }): validate.TimestampRules;

        /**
         * Creates a plain object from a TimestampRules message. Also converts values to other types if specified.
         * @param message TimestampRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: validate.TimestampRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimestampRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace api. */
    namespace api {

        /** Properties of a Http. */
        interface IHttp {

            /** Http rules */
            rules?: (google.api.IHttpRule[]|null);

            /** Http fullyDecodeReservedExpansion */
            fullyDecodeReservedExpansion?: (boolean|null);
        }

        /** Represents a Http. */
        class Http implements IHttp {

            /**
             * Constructs a new Http.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttp);

            /** Http rules. */
            public rules: google.api.IHttpRule[];

            /** Http fullyDecodeReservedExpansion. */
            public fullyDecodeReservedExpansion: boolean;

            /**
             * Verifies a Http message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Http message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Http
             */
            public static fromObject(object: { [k: string]: any }): google.api.Http;

            /**
             * Creates a plain object from a Http message. Also converts values to other types if specified.
             * @param message Http
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.Http, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Http to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HttpRule. */
        interface IHttpRule {

            /** HttpRule selector */
            selector?: (string|null);

            /** HttpRule get */
            get?: (string|null);

            /** HttpRule put */
            put?: (string|null);

            /** HttpRule post */
            post?: (string|null);

            /** HttpRule delete */
            "delete"?: (string|null);

            /** HttpRule patch */
            patch?: (string|null);

            /** HttpRule custom */
            custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule body */
            body?: (string|null);

            /** HttpRule responseBody */
            responseBody?: (string|null);

            /** HttpRule additionalBindings */
            additionalBindings?: (google.api.IHttpRule[]|null);
        }

        /** Represents a HttpRule. */
        class HttpRule implements IHttpRule {

            /**
             * Constructs a new HttpRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttpRule);

            /** HttpRule selector. */
            public selector: string;

            /** HttpRule get. */
            public get?: (string|null);

            /** HttpRule put. */
            public put?: (string|null);

            /** HttpRule post. */
            public post?: (string|null);

            /** HttpRule delete. */
            public delete?: (string|null);

            /** HttpRule patch. */
            public patch?: (string|null);

            /** HttpRule custom. */
            public custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule body. */
            public body: string;

            /** HttpRule responseBody. */
            public responseBody: string;

            /** HttpRule additionalBindings. */
            public additionalBindings: google.api.IHttpRule[];

            /** HttpRule pattern. */
            public pattern?: ("get"|"put"|"post"|"delete"|"patch"|"custom");

            /**
             * Verifies a HttpRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HttpRule
             */
            public static fromObject(object: { [k: string]: any }): google.api.HttpRule;

            /**
             * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
             * @param message HttpRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.HttpRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HttpRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CustomHttpPattern. */
        interface ICustomHttpPattern {

            /** CustomHttpPattern kind */
            kind?: (string|null);

            /** CustomHttpPattern path */
            path?: (string|null);
        }

        /** Represents a CustomHttpPattern. */
        class CustomHttpPattern implements ICustomHttpPattern {

            /**
             * Constructs a new CustomHttpPattern.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.ICustomHttpPattern);

            /** CustomHttpPattern kind. */
            public kind: string;

            /** CustomHttpPattern path. */
            public path: string;

            /**
             * Verifies a CustomHttpPattern message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CustomHttpPattern
             */
            public static fromObject(object: { [k: string]: any }): google.api.CustomHttpPattern;

            /**
             * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
             * @param message CustomHttpPattern
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.CustomHttpPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CustomHttpPattern to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of a FileDescriptorSet. */
        interface IFileDescriptorSet {

            /** FileDescriptorSet file */
            file?: (google.protobuf.IFileDescriptorProto[]|null);
        }

        /** Represents a FileDescriptorSet. */
        class FileDescriptorSet implements IFileDescriptorSet {

            /**
             * Constructs a new FileDescriptorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorSet);

            /** FileDescriptorSet file. */
            public file: google.protobuf.IFileDescriptorProto[];

            /**
             * Verifies a FileDescriptorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorSet
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorSet;

            /**
             * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
             * @param message FileDescriptorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileDescriptorProto. */
        interface IFileDescriptorProto {

            /** FileDescriptorProto name */
            name?: (string|null);

            /** FileDescriptorProto package */
            "package"?: (string|null);

            /** FileDescriptorProto dependency */
            dependency?: (string[]|null);

            /** FileDescriptorProto publicDependency */
            publicDependency?: (number[]|null);

            /** FileDescriptorProto weakDependency */
            weakDependency?: (number[]|null);

            /** FileDescriptorProto messageType */
            messageType?: (google.protobuf.IDescriptorProto[]|null);

            /** FileDescriptorProto enumType */
            enumType?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** FileDescriptorProto service */
            service?: (google.protobuf.IServiceDescriptorProto[]|null);

            /** FileDescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** FileDescriptorProto options */
            options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto sourceCodeInfo */
            sourceCodeInfo?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax */
            syntax?: (string|null);
        }

        /** Represents a FileDescriptorProto. */
        class FileDescriptorProto implements IFileDescriptorProto {

            /**
             * Constructs a new FileDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorProto);

            /** FileDescriptorProto name. */
            public name: string;

            /** FileDescriptorProto package. */
            public package: string;

            /** FileDescriptorProto dependency. */
            public dependency: string[];

            /** FileDescriptorProto publicDependency. */
            public publicDependency: number[];

            /** FileDescriptorProto weakDependency. */
            public weakDependency: number[];

            /** FileDescriptorProto messageType. */
            public messageType: google.protobuf.IDescriptorProto[];

            /** FileDescriptorProto enumType. */
            public enumType: google.protobuf.IEnumDescriptorProto[];

            /** FileDescriptorProto service. */
            public service: google.protobuf.IServiceDescriptorProto[];

            /** FileDescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** FileDescriptorProto options. */
            public options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto sourceCodeInfo. */
            public sourceCodeInfo?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax. */
            public syntax: string;

            /**
             * Verifies a FileDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorProto;

            /**
             * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
             * @param message FileDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DescriptorProto. */
        interface IDescriptorProto {

            /** DescriptorProto name */
            name?: (string|null);

            /** DescriptorProto field */
            field?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto nestedType */
            nestedType?: (google.protobuf.IDescriptorProto[]|null);

            /** DescriptorProto enumType */
            enumType?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** DescriptorProto extensionRange */
            extensionRange?: (google.protobuf.DescriptorProto.IExtensionRange[]|null);

            /** DescriptorProto oneofDecl */
            oneofDecl?: (google.protobuf.IOneofDescriptorProto[]|null);

            /** DescriptorProto options */
            options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reservedRange */
            reservedRange?: (google.protobuf.DescriptorProto.IReservedRange[]|null);

            /** DescriptorProto reservedName */
            reservedName?: (string[]|null);
        }

        /** Represents a DescriptorProto. */
        class DescriptorProto implements IDescriptorProto {

            /**
             * Constructs a new DescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDescriptorProto);

            /** DescriptorProto name. */
            public name: string;

            /** DescriptorProto field. */
            public field: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto nestedType. */
            public nestedType: google.protobuf.IDescriptorProto[];

            /** DescriptorProto enumType. */
            public enumType: google.protobuf.IEnumDescriptorProto[];

            /** DescriptorProto extensionRange. */
            public extensionRange: google.protobuf.DescriptorProto.IExtensionRange[];

            /** DescriptorProto oneofDecl. */
            public oneofDecl: google.protobuf.IOneofDescriptorProto[];

            /** DescriptorProto options. */
            public options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reservedRange. */
            public reservedRange: google.protobuf.DescriptorProto.IReservedRange[];

            /** DescriptorProto reservedName. */
            public reservedName: string[];

            /**
             * Verifies a DescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto;

            /**
             * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
             * @param message DescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.DescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace DescriptorProto {

            /** Properties of an ExtensionRange. */
            interface IExtensionRange {

                /** ExtensionRange start */
                start?: (number|null);

                /** ExtensionRange end */
                end?: (number|null);

                /** ExtensionRange options */
                options?: (google.protobuf.IExtensionRangeOptions|null);
            }

            /** Represents an ExtensionRange. */
            class ExtensionRange implements IExtensionRange {

                /**
                 * Constructs a new ExtensionRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IExtensionRange);

                /** ExtensionRange start. */
                public start: number;

                /** ExtensionRange end. */
                public end: number;

                /** ExtensionRange options. */
                public options?: (google.protobuf.IExtensionRangeOptions|null);

                /**
                 * Verifies an ExtensionRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtensionRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                 * @param message ExtensionRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ExtensionRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtensionRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReservedRange. */
            interface IReservedRange {

                /** ReservedRange start */
                start?: (number|null);

                /** ReservedRange end */
                end?: (number|null);
            }

            /** Represents a ReservedRange. */
            class ReservedRange implements IReservedRange {

                /**
                 * Constructs a new ReservedRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IReservedRange);

                /** ReservedRange start. */
                public start: number;

                /** ReservedRange end. */
                public end: number;

                /**
                 * Verifies a ReservedRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReservedRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                 * @param message ReservedRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ReservedRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReservedRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of an ExtensionRangeOptions. */
        interface IExtensionRangeOptions {

            /** ExtensionRangeOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an ExtensionRangeOptions. */
        class ExtensionRangeOptions implements IExtensionRangeOptions {

            /**
             * Constructs a new ExtensionRangeOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IExtensionRangeOptions);

            /** ExtensionRangeOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies an ExtensionRangeOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtensionRangeOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ExtensionRangeOptions;

            /**
             * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
             * @param message ExtensionRangeOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ExtensionRangeOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtensionRangeOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FieldDescriptorProto. */
        interface IFieldDescriptorProto {

            /** FieldDescriptorProto name */
            name?: (string|null);

            /** FieldDescriptorProto number */
            number?: (number|null);

            /** FieldDescriptorProto label */
            label?: (google.protobuf.FieldDescriptorProto.Label|null);

            /** FieldDescriptorProto type */
            type?: (google.protobuf.FieldDescriptorProto.Type|null);

            /** FieldDescriptorProto typeName */
            typeName?: (string|null);

            /** FieldDescriptorProto extendee */
            extendee?: (string|null);

            /** FieldDescriptorProto defaultValue */
            defaultValue?: (string|null);

            /** FieldDescriptorProto oneofIndex */
            oneofIndex?: (number|null);

            /** FieldDescriptorProto jsonName */
            jsonName?: (string|null);

            /** FieldDescriptorProto options */
            options?: (google.protobuf.IFieldOptions|null);

            /** FieldDescriptorProto proto3Optional */
            proto3Optional?: (boolean|null);
        }

        /** Represents a FieldDescriptorProto. */
        class FieldDescriptorProto implements IFieldDescriptorProto {

            /**
             * Constructs a new FieldDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldDescriptorProto);

            /** FieldDescriptorProto name. */
            public name: string;

            /** FieldDescriptorProto number. */
            public number: number;

            /** FieldDescriptorProto label. */
            public label: google.protobuf.FieldDescriptorProto.Label;

            /** FieldDescriptorProto type. */
            public type: google.protobuf.FieldDescriptorProto.Type;

            /** FieldDescriptorProto typeName. */
            public typeName: string;

            /** FieldDescriptorProto extendee. */
            public extendee: string;

            /** FieldDescriptorProto defaultValue. */
            public defaultValue: string;

            /** FieldDescriptorProto oneofIndex. */
            public oneofIndex: number;

            /** FieldDescriptorProto jsonName. */
            public jsonName: string;

            /** FieldDescriptorProto options. */
            public options?: (google.protobuf.IFieldOptions|null);

            /** FieldDescriptorProto proto3Optional. */
            public proto3Optional: boolean;

            /**
             * Verifies a FieldDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldDescriptorProto;

            /**
             * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
             * @param message FieldDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldDescriptorProto {

            /** Type enum. */
            enum Type {
                TYPE_DOUBLE = 1,
                TYPE_FLOAT = 2,
                TYPE_INT64 = 3,
                TYPE_UINT64 = 4,
                TYPE_INT32 = 5,
                TYPE_FIXED64 = 6,
                TYPE_FIXED32 = 7,
                TYPE_BOOL = 8,
                TYPE_STRING = 9,
                TYPE_GROUP = 10,
                TYPE_MESSAGE = 11,
                TYPE_BYTES = 12,
                TYPE_UINT32 = 13,
                TYPE_ENUM = 14,
                TYPE_SFIXED32 = 15,
                TYPE_SFIXED64 = 16,
                TYPE_SINT32 = 17,
                TYPE_SINT64 = 18
            }

            /** Label enum. */
            enum Label {
                LABEL_OPTIONAL = 1,
                LABEL_REQUIRED = 2,
                LABEL_REPEATED = 3
            }
        }

        /** Properties of an OneofDescriptorProto. */
        interface IOneofDescriptorProto {

            /** OneofDescriptorProto name */
            name?: (string|null);

            /** OneofDescriptorProto options */
            options?: (google.protobuf.IOneofOptions|null);
        }

        /** Represents an OneofDescriptorProto. */
        class OneofDescriptorProto implements IOneofDescriptorProto {

            /**
             * Constructs a new OneofDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofDescriptorProto);

            /** OneofDescriptorProto name. */
            public name: string;

            /** OneofDescriptorProto options. */
            public options?: (google.protobuf.IOneofOptions|null);

            /**
             * Verifies an OneofDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofDescriptorProto;

            /**
             * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
             * @param message OneofDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumDescriptorProto. */
        interface IEnumDescriptorProto {

            /** EnumDescriptorProto name */
            name?: (string|null);

            /** EnumDescriptorProto value */
            value?: (google.protobuf.IEnumValueDescriptorProto[]|null);

            /** EnumDescriptorProto options */
            options?: (google.protobuf.IEnumOptions|null);

            /** EnumDescriptorProto reservedRange */
            reservedRange?: (google.protobuf.EnumDescriptorProto.IEnumReservedRange[]|null);

            /** EnumDescriptorProto reservedName */
            reservedName?: (string[]|null);
        }

        /** Represents an EnumDescriptorProto. */
        class EnumDescriptorProto implements IEnumDescriptorProto {

            /**
             * Constructs a new EnumDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumDescriptorProto);

            /** EnumDescriptorProto name. */
            public name: string;

            /** EnumDescriptorProto value. */
            public value: google.protobuf.IEnumValueDescriptorProto[];

            /** EnumDescriptorProto options. */
            public options?: (google.protobuf.IEnumOptions|null);

            /** EnumDescriptorProto reservedRange. */
            public reservedRange: google.protobuf.EnumDescriptorProto.IEnumReservedRange[];

            /** EnumDescriptorProto reservedName. */
            public reservedName: string[];

            /**
             * Verifies an EnumDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumDescriptorProto;

            /**
             * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace EnumDescriptorProto {

            /** Properties of an EnumReservedRange. */
            interface IEnumReservedRange {

                /** EnumReservedRange start */
                start?: (number|null);

                /** EnumReservedRange end */
                end?: (number|null);
            }

            /** Represents an EnumReservedRange. */
            class EnumReservedRange implements IEnumReservedRange {

                /**
                 * Constructs a new EnumReservedRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.EnumDescriptorProto.IEnumReservedRange);

                /** EnumReservedRange start. */
                public start: number;

                /** EnumReservedRange end. */
                public end: number;

                /**
                 * Verifies an EnumReservedRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EnumReservedRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.EnumDescriptorProto.EnumReservedRange;

                /**
                 * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                 * @param message EnumReservedRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.EnumDescriptorProto.EnumReservedRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EnumReservedRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of an EnumValueDescriptorProto. */
        interface IEnumValueDescriptorProto {

            /** EnumValueDescriptorProto name */
            name?: (string|null);

            /** EnumValueDescriptorProto number */
            number?: (number|null);

            /** EnumValueDescriptorProto options */
            options?: (google.protobuf.IEnumValueOptions|null);
        }

        /** Represents an EnumValueDescriptorProto. */
        class EnumValueDescriptorProto implements IEnumValueDescriptorProto {

            /**
             * Constructs a new EnumValueDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueDescriptorProto);

            /** EnumValueDescriptorProto name. */
            public name: string;

            /** EnumValueDescriptorProto number. */
            public number: number;

            /** EnumValueDescriptorProto options. */
            public options?: (google.protobuf.IEnumValueOptions|null);

            /**
             * Verifies an EnumValueDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueDescriptorProto;

            /**
             * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumValueDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceDescriptorProto. */
        interface IServiceDescriptorProto {

            /** ServiceDescriptorProto name */
            name?: (string|null);

            /** ServiceDescriptorProto method */
            method?: (google.protobuf.IMethodDescriptorProto[]|null);

            /** ServiceDescriptorProto options */
            options?: (google.protobuf.IServiceOptions|null);
        }

        /** Represents a ServiceDescriptorProto. */
        class ServiceDescriptorProto implements IServiceDescriptorProto {

            /**
             * Constructs a new ServiceDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceDescriptorProto);

            /** ServiceDescriptorProto name. */
            public name: string;

            /** ServiceDescriptorProto method. */
            public method: google.protobuf.IMethodDescriptorProto[];

            /** ServiceDescriptorProto options. */
            public options?: (google.protobuf.IServiceOptions|null);

            /**
             * Verifies a ServiceDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceDescriptorProto;

            /**
             * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
             * @param message ServiceDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodDescriptorProto. */
        interface IMethodDescriptorProto {

            /** MethodDescriptorProto name */
            name?: (string|null);

            /** MethodDescriptorProto inputType */
            inputType?: (string|null);

            /** MethodDescriptorProto outputType */
            outputType?: (string|null);

            /** MethodDescriptorProto options */
            options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto clientStreaming */
            clientStreaming?: (boolean|null);

            /** MethodDescriptorProto serverStreaming */
            serverStreaming?: (boolean|null);
        }

        /** Represents a MethodDescriptorProto. */
        class MethodDescriptorProto implements IMethodDescriptorProto {

            /**
             * Constructs a new MethodDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodDescriptorProto);

            /** MethodDescriptorProto name. */
            public name: string;

            /** MethodDescriptorProto inputType. */
            public inputType: string;

            /** MethodDescriptorProto outputType. */
            public outputType: string;

            /** MethodDescriptorProto options. */
            public options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto clientStreaming. */
            public clientStreaming: boolean;

            /** MethodDescriptorProto serverStreaming. */
            public serverStreaming: boolean;

            /**
             * Verifies a MethodDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodDescriptorProto;

            /**
             * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
             * @param message MethodDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileOptions. */
        interface IFileOptions {

            /** FileOptions javaPackage */
            javaPackage?: (string|null);

            /** FileOptions javaOuterClassname */
            javaOuterClassname?: (string|null);

            /** FileOptions javaMultipleFiles */
            javaMultipleFiles?: (boolean|null);

            /** FileOptions javaGenerateEqualsAndHash */
            javaGenerateEqualsAndHash?: (boolean|null);

            /** FileOptions javaStringCheckUtf8 */
            javaStringCheckUtf8?: (boolean|null);

            /** FileOptions optimizeFor */
            optimizeFor?: (google.protobuf.FileOptions.OptimizeMode|null);

            /** FileOptions goPackage */
            goPackage?: (string|null);

            /** FileOptions ccGenericServices */
            ccGenericServices?: (boolean|null);

            /** FileOptions javaGenericServices */
            javaGenericServices?: (boolean|null);

            /** FileOptions pyGenericServices */
            pyGenericServices?: (boolean|null);

            /** FileOptions phpGenericServices */
            phpGenericServices?: (boolean|null);

            /** FileOptions deprecated */
            deprecated?: (boolean|null);

            /** FileOptions ccEnableArenas */
            ccEnableArenas?: (boolean|null);

            /** FileOptions objcClassPrefix */
            objcClassPrefix?: (string|null);

            /** FileOptions csharpNamespace */
            csharpNamespace?: (string|null);

            /** FileOptions swiftPrefix */
            swiftPrefix?: (string|null);

            /** FileOptions phpClassPrefix */
            phpClassPrefix?: (string|null);

            /** FileOptions phpNamespace */
            phpNamespace?: (string|null);

            /** FileOptions phpMetadataNamespace */
            phpMetadataNamespace?: (string|null);

            /** FileOptions rubyPackage */
            rubyPackage?: (string|null);

            /** FileOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents a FileOptions. */
        class FileOptions implements IFileOptions {

            /**
             * Constructs a new FileOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileOptions);

            /** FileOptions javaPackage. */
            public javaPackage: string;

            /** FileOptions javaOuterClassname. */
            public javaOuterClassname: string;

            /** FileOptions javaMultipleFiles. */
            public javaMultipleFiles: boolean;

            /** FileOptions javaGenerateEqualsAndHash. */
            public javaGenerateEqualsAndHash: boolean;

            /** FileOptions javaStringCheckUtf8. */
            public javaStringCheckUtf8: boolean;

            /** FileOptions optimizeFor. */
            public optimizeFor: google.protobuf.FileOptions.OptimizeMode;

            /** FileOptions goPackage. */
            public goPackage: string;

            /** FileOptions ccGenericServices. */
            public ccGenericServices: boolean;

            /** FileOptions javaGenericServices. */
            public javaGenericServices: boolean;

            /** FileOptions pyGenericServices. */
            public pyGenericServices: boolean;

            /** FileOptions phpGenericServices. */
            public phpGenericServices: boolean;

            /** FileOptions deprecated. */
            public deprecated: boolean;

            /** FileOptions ccEnableArenas. */
            public ccEnableArenas: boolean;

            /** FileOptions objcClassPrefix. */
            public objcClassPrefix: string;

            /** FileOptions csharpNamespace. */
            public csharpNamespace: string;

            /** FileOptions swiftPrefix. */
            public swiftPrefix: string;

            /** FileOptions phpClassPrefix. */
            public phpClassPrefix: string;

            /** FileOptions phpNamespace. */
            public phpNamespace: string;

            /** FileOptions phpMetadataNamespace. */
            public phpMetadataNamespace: string;

            /** FileOptions rubyPackage. */
            public rubyPackage: string;

            /** FileOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies a FileOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileOptions;

            /**
             * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
             * @param message FileOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FileOptions {

            /** OptimizeMode enum. */
            enum OptimizeMode {
                SPEED = 1,
                CODE_SIZE = 2,
                LITE_RUNTIME = 3
            }
        }

        /** Properties of a MessageOptions. */
        interface IMessageOptions {

            /** MessageOptions messageSetWireFormat */
            messageSetWireFormat?: (boolean|null);

            /** MessageOptions noStandardDescriptorAccessor */
            noStandardDescriptorAccessor?: (boolean|null);

            /** MessageOptions deprecated */
            deprecated?: (boolean|null);

            /** MessageOptions mapEntry */
            mapEntry?: (boolean|null);

            /** MessageOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);

            /** MessageOptions .validate.disabled */
            ".validate.disabled"?: (boolean|null);

            /** MessageOptions .validate.ignored */
            ".validate.ignored"?: (boolean|null);

            /** MessageOptions .clutch.api.v1.reference */
            ".clutch.api.v1.reference"?: (clutch.api.v1.IReference|null);

            /** MessageOptions .clutch.api.v1.id */
            ".clutch.api.v1.id"?: (clutch.api.v1.IIdentifier|null);

            /** MessageOptions .clutch.api.v1.redacted */
            ".clutch.api.v1.redacted"?: (boolean|null);
        }

        /** Represents a MessageOptions. */
        class MessageOptions implements IMessageOptions {

            /**
             * Constructs a new MessageOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMessageOptions);

            /** MessageOptions messageSetWireFormat. */
            public messageSetWireFormat: boolean;

            /** MessageOptions noStandardDescriptorAccessor. */
            public noStandardDescriptorAccessor: boolean;

            /** MessageOptions deprecated. */
            public deprecated: boolean;

            /** MessageOptions mapEntry. */
            public mapEntry: boolean;

            /** MessageOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies a MessageOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MessageOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MessageOptions;

            /**
             * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
             * @param message MessageOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MessageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MessageOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FieldOptions. */
        interface IFieldOptions {

            /** FieldOptions ctype */
            ctype?: (google.protobuf.FieldOptions.CType|null);

            /** FieldOptions packed */
            packed?: (boolean|null);

            /** FieldOptions jstype */
            jstype?: (google.protobuf.FieldOptions.JSType|null);

            /** FieldOptions lazy */
            lazy?: (boolean|null);

            /** FieldOptions deprecated */
            deprecated?: (boolean|null);

            /** FieldOptions weak */
            weak?: (boolean|null);

            /** FieldOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);

            /** FieldOptions .validate.rules */
            ".validate.rules"?: (validate.IFieldRules|null);
        }

        /** Represents a FieldOptions. */
        class FieldOptions implements IFieldOptions {

            /**
             * Constructs a new FieldOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldOptions);

            /** FieldOptions ctype. */
            public ctype: google.protobuf.FieldOptions.CType;

            /** FieldOptions packed. */
            public packed: boolean;

            /** FieldOptions jstype. */
            public jstype: google.protobuf.FieldOptions.JSType;

            /** FieldOptions lazy. */
            public lazy: boolean;

            /** FieldOptions deprecated. */
            public deprecated: boolean;

            /** FieldOptions weak. */
            public weak: boolean;

            /** FieldOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies a FieldOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldOptions;

            /**
             * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
             * @param message FieldOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldOptions {

            /** CType enum. */
            enum CType {
                STRING = 0,
                CORD = 1,
                STRING_PIECE = 2
            }

            /** JSType enum. */
            enum JSType {
                JS_NORMAL = 0,
                JS_STRING = 1,
                JS_NUMBER = 2
            }
        }

        /** Properties of an OneofOptions. */
        interface IOneofOptions {

            /** OneofOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);

            /** OneofOptions .validate.required */
            ".validate.required"?: (boolean|null);
        }

        /** Represents an OneofOptions. */
        class OneofOptions implements IOneofOptions {

            /**
             * Constructs a new OneofOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofOptions);

            /** OneofOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies an OneofOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofOptions;

            /**
             * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
             * @param message OneofOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumOptions. */
        interface IEnumOptions {

            /** EnumOptions allowAlias */
            allowAlias?: (boolean|null);

            /** EnumOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an EnumOptions. */
        class EnumOptions implements IEnumOptions {

            /**
             * Constructs a new EnumOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumOptions);

            /** EnumOptions allowAlias. */
            public allowAlias: boolean;

            /** EnumOptions deprecated. */
            public deprecated: boolean;

            /** EnumOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies an EnumOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumOptions;

            /**
             * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
             * @param message EnumOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueOptions. */
        interface IEnumValueOptions {

            /** EnumValueOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumValueOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an EnumValueOptions. */
        class EnumValueOptions implements IEnumValueOptions {

            /**
             * Constructs a new EnumValueOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueOptions);

            /** EnumValueOptions deprecated. */
            public deprecated: boolean;

            /** EnumValueOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies an EnumValueOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueOptions;

            /**
             * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
             * @param message EnumValueOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceOptions. */
        interface IServiceOptions {

            /** ServiceOptions deprecated */
            deprecated?: (boolean|null);

            /** ServiceOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents a ServiceOptions. */
        class ServiceOptions implements IServiceOptions {

            /**
             * Constructs a new ServiceOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceOptions);

            /** ServiceOptions deprecated. */
            public deprecated: boolean;

            /** ServiceOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies a ServiceOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceOptions;

            /**
             * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
             * @param message ServiceOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodOptions. */
        interface IMethodOptions {

            /** MethodOptions deprecated */
            deprecated?: (boolean|null);

            /** MethodOptions idempotencyLevel */
            idempotencyLevel?: (google.protobuf.MethodOptions.IdempotencyLevel|null);

            /** MethodOptions uninterpretedOption */
            uninterpretedOption?: (google.protobuf.IUninterpretedOption[]|null);

            /** MethodOptions .google.api.http */
            ".google.api.http"?: (google.api.IHttpRule|null);

            /** MethodOptions .clutch.api.v1.action */
            ".clutch.api.v1.action"?: (clutch.api.v1.IAction|null);

            /** MethodOptions .clutch.api.v1.disableAudit */
            ".clutch.api.v1.disableAudit"?: (boolean|null);
        }

        /** Represents a MethodOptions. */
        class MethodOptions implements IMethodOptions {

            /**
             * Constructs a new MethodOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodOptions);

            /** MethodOptions deprecated. */
            public deprecated: boolean;

            /** MethodOptions idempotencyLevel. */
            public idempotencyLevel: google.protobuf.MethodOptions.IdempotencyLevel;

            /** MethodOptions uninterpretedOption. */
            public uninterpretedOption: google.protobuf.IUninterpretedOption[];

            /**
             * Verifies a MethodOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodOptions;

            /**
             * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
             * @param message MethodOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MethodOptions {

            /** IdempotencyLevel enum. */
            enum IdempotencyLevel {
                IDEMPOTENCY_UNKNOWN = 0,
                NO_SIDE_EFFECTS = 1,
                IDEMPOTENT = 2
            }
        }

        /** Properties of an UninterpretedOption. */
        interface IUninterpretedOption {

            /** UninterpretedOption name */
            name?: (google.protobuf.UninterpretedOption.INamePart[]|null);

            /** UninterpretedOption identifierValue */
            identifierValue?: (string|null);

            /** UninterpretedOption positiveIntValue */
            positiveIntValue?: (number|Long|null);

            /** UninterpretedOption negativeIntValue */
            negativeIntValue?: (number|Long|null);

            /** UninterpretedOption doubleValue */
            doubleValue?: (number|null);

            /** UninterpretedOption stringValue */
            stringValue?: (Uint8Array|null);

            /** UninterpretedOption aggregateValue */
            aggregateValue?: (string|null);
        }

        /** Represents an UninterpretedOption. */
        class UninterpretedOption implements IUninterpretedOption {

            /**
             * Constructs a new UninterpretedOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IUninterpretedOption);

            /** UninterpretedOption name. */
            public name: google.protobuf.UninterpretedOption.INamePart[];

            /** UninterpretedOption identifierValue. */
            public identifierValue: string;

            /** UninterpretedOption positiveIntValue. */
            public positiveIntValue: (number|Long);

            /** UninterpretedOption negativeIntValue. */
            public negativeIntValue: (number|Long);

            /** UninterpretedOption doubleValue. */
            public doubleValue: number;

            /** UninterpretedOption stringValue. */
            public stringValue: Uint8Array;

            /** UninterpretedOption aggregateValue. */
            public aggregateValue: string;

            /**
             * Verifies an UninterpretedOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UninterpretedOption
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption;

            /**
             * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
             * @param message UninterpretedOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.UninterpretedOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UninterpretedOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UninterpretedOption {

            /** Properties of a NamePart. */
            interface INamePart {

                /** NamePart namePart */
                namePart: string;

                /** NamePart isExtension */
                isExtension: boolean;
            }

            /** Represents a NamePart. */
            class NamePart implements INamePart {

                /**
                 * Constructs a new NamePart.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.UninterpretedOption.INamePart);

                /** NamePart namePart. */
                public namePart: string;

                /** NamePart isExtension. */
                public isExtension: boolean;

                /**
                 * Verifies a NamePart message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NamePart
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                 * @param message NamePart
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.UninterpretedOption.NamePart, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NamePart to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a SourceCodeInfo. */
        interface ISourceCodeInfo {

            /** SourceCodeInfo location */
            location?: (google.protobuf.SourceCodeInfo.ILocation[]|null);
        }

        /** Represents a SourceCodeInfo. */
        class SourceCodeInfo implements ISourceCodeInfo {

            /**
             * Constructs a new SourceCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ISourceCodeInfo);

            /** SourceCodeInfo location. */
            public location: google.protobuf.SourceCodeInfo.ILocation[];

            /**
             * Verifies a SourceCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SourceCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo;

            /**
             * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
             * @param message SourceCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.SourceCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SourceCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace SourceCodeInfo {

            /** Properties of a Location. */
            interface ILocation {

                /** Location path */
                path?: (number[]|null);

                /** Location span */
                span?: (number[]|null);

                /** Location leadingComments */
                leadingComments?: (string|null);

                /** Location trailingComments */
                trailingComments?: (string|null);

                /** Location leadingDetachedComments */
                leadingDetachedComments?: (string[]|null);
            }

            /** Represents a Location. */
            class Location implements ILocation {

                /**
                 * Constructs a new Location.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.SourceCodeInfo.ILocation);

                /** Location path. */
                public path: number[];

                /** Location span. */
                public span: number[];

                /** Location leadingComments. */
                public leadingComments: string;

                /** Location trailingComments. */
                public trailingComments: string;

                /** Location leadingDetachedComments. */
                public leadingDetachedComments: string[];

                /**
                 * Verifies a Location message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Location message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Location
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Creates a plain object from a Location message. Also converts values to other types if specified.
                 * @param message Location
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.SourceCodeInfo.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Location to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GeneratedCodeInfo. */
        interface IGeneratedCodeInfo {

            /** GeneratedCodeInfo annotation */
            annotation?: (google.protobuf.GeneratedCodeInfo.IAnnotation[]|null);
        }

        /** Represents a GeneratedCodeInfo. */
        class GeneratedCodeInfo implements IGeneratedCodeInfo {

            /**
             * Constructs a new GeneratedCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IGeneratedCodeInfo);

            /** GeneratedCodeInfo annotation. */
            public annotation: google.protobuf.GeneratedCodeInfo.IAnnotation[];

            /**
             * Verifies a GeneratedCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GeneratedCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo;

            /**
             * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
             * @param message GeneratedCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.GeneratedCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GeneratedCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GeneratedCodeInfo {

            /** Properties of an Annotation. */
            interface IAnnotation {

                /** Annotation path */
                path?: (number[]|null);

                /** Annotation sourceFile */
                sourceFile?: (string|null);

                /** Annotation begin */
                begin?: (number|null);

                /** Annotation end */
                end?: (number|null);
            }

            /** Represents an Annotation. */
            class Annotation implements IAnnotation {

                /**
                 * Constructs a new Annotation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.GeneratedCodeInfo.IAnnotation);

                /** Annotation path. */
                public path: number[];

                /** Annotation sourceFile. */
                public sourceFile: string;

                /** Annotation begin. */
                public begin: number;

                /** Annotation end. */
                public end: number;

                /**
                 * Verifies an Annotation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Annotation
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                 * @param message Annotation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.GeneratedCodeInfo.Annotation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Annotation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a Duration. */
        interface IDuration {

            /** Duration seconds */
            seconds?: (number|Long|null);

            /** Duration nanos */
            nanos?: (number|null);
        }

        /** Represents a Duration. */
        class Duration implements IDuration {

            /**
             * Constructs a new Duration.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDuration);

            /** Duration seconds. */
            public seconds: (number|Long);

            /** Duration nanos. */
            public nanos: number;

            /**
             * Verifies a Duration message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Duration message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Duration
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Duration;

            /**
             * Creates a plain object from a Duration message. Also converts values to other types if specified.
             * @param message Duration
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Duration, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Duration to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (number|Long|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp implements ITimestamp {

            /**
             * Constructs a new Timestamp.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: (number|Long);

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Verifies a Timestamp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Timestamp
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Timestamp;

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @param message Timestamp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Timestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Timestamp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Namespace clutch. */
export namespace clutch {

    /** Namespace api. */
    namespace api {

        /** Namespace v1. */
        namespace v1 {

            /** ActionType enum. */
            enum ActionType {
                UNSPECIFIED = 0,
                CREATE = 1,
                READ = 2,
                UPDATE = 3,
                DELETE = 4
            }

            /** Properties of an Action. */
            interface IAction {

                /** Action type */
                type?: (clutch.api.v1.ActionType|null);
            }

            /** Represents an Action. */
            class Action implements IAction {

                /**
                 * Constructs a new Action.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: clutch.api.v1.IAction);

                /** Action type. */
                public type: clutch.api.v1.ActionType;

                /**
                 * Verifies an Action message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Action message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Action
                 */
                public static fromObject(object: { [k: string]: any }): clutch.api.v1.Action;

                /**
                 * Creates a plain object from an Action message. Also converts values to other types if specified.
                 * @param message Action
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: clutch.api.v1.Action, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Action to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Pattern. */
            interface IPattern {

                /** Pattern typeUrl */
                typeUrl?: (string|null);

                /** Pattern pattern */
                pattern?: (string|null);
            }

            /** Represents a Pattern. */
            class Pattern implements IPattern {

                /**
                 * Constructs a new Pattern.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: clutch.api.v1.IPattern);

                /** Pattern typeUrl. */
                public typeUrl: string;

                /** Pattern pattern. */
                public pattern: string;

                /**
                 * Verifies a Pattern message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Pattern message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Pattern
                 */
                public static fromObject(object: { [k: string]: any }): clutch.api.v1.Pattern;

                /**
                 * Creates a plain object from a Pattern message. Also converts values to other types if specified.
                 * @param message Pattern
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: clutch.api.v1.Pattern, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Pattern to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Identifier. */
            interface IIdentifier {

                /** Identifier patterns */
                patterns?: (clutch.api.v1.IPattern[]|null);
            }

            /** Represents an Identifier. */
            class Identifier implements IIdentifier {

                /**
                 * Constructs a new Identifier.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: clutch.api.v1.IIdentifier);

                /** Identifier patterns. */
                public patterns: clutch.api.v1.IPattern[];

                /**
                 * Verifies an Identifier message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Identifier message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Identifier
                 */
                public static fromObject(object: { [k: string]: any }): clutch.api.v1.Identifier;

                /**
                 * Creates a plain object from an Identifier message. Also converts values to other types if specified.
                 * @param message Identifier
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: clutch.api.v1.Identifier, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Identifier to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Reference. */
            interface IReference {

                /** Reference fields */
                fields?: (string[]|null);
            }

            /** Represents a Reference. */
            class Reference implements IReference {

                /**
                 * Constructs a new Reference.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: clutch.api.v1.IReference);

                /** Reference fields. */
                public fields: string[];

                /**
                 * Verifies a Reference message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Reference message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Reference
                 */
                public static fromObject(object: { [k: string]: any }): clutch.api.v1.Reference;

                /**
                 * Creates a plain object from a Reference message. Also converts values to other types if specified.
                 * @param message Reference
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: clutch.api.v1.Reference, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Reference to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Redacted. */
            interface IRedacted {

                /** Redacted redactedTypeUrl */
                redactedTypeUrl?: (string|null);
            }

            /** Represents a Redacted. */
            class Redacted implements IRedacted {

                /**
                 * Constructs a new Redacted.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: clutch.api.v1.IRedacted);

                /** Redacted redactedTypeUrl. */
                public redactedTypeUrl: string;

                /**
                 * Verifies a Redacted message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Redacted message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Redacted
                 */
                public static fromObject(object: { [k: string]: any }): clutch.api.v1.Redacted;

                /**
                 * Creates a plain object from a Redacted message. Also converts values to other types if specified.
                 * @param message Redacted
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: clutch.api.v1.Redacted, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Redacted to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}
